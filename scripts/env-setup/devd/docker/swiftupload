#!/bin/bash
date
cat <<< '
use meteor
db.StoredFiles.find({"versions.original.meta.pipeFrom":{$exists:false}})' > mongoSwift.js

FILE_IDS=`echo $(mongo --host 172.17.0.3 -p 27017 < mongoSwift.js | grep '_id' | awk '{print $4}') | tr -d '[:punct:]'`
rm mongoSwift.js
word_count=`wc -w <<< $FILE_IDS`
echo "Ids of Files to upload to object storage:"
echo ${FILE_IDS}

i=1

# enter docker volume storage directory
cd /pals/data

while [ $i -le $word_count ]
do
  id=`awk -v i="$i" '{print $i}' <<< $FILE_IDS`
  echo "Uploading "$id
  i=`expr $i + 1`

  # assuming Swift credentials already loaded
  # upload the specific file to object storage
  output=`swift upload dev-store $id.nc`

  # if upload successful, update the mongodb accordingly
  echo $output
  echo $id'.nc'
  if [ $output = $id'.nc' ]; then
    cat << EOF > mongoUpdate
    use meteor
    db.StoredFiles.update({_id: '$id'}, {\$set: {'versions.original.meta.pipeFrom': "https://keystone.rc.nectar.org.au:5000/v2.0/files/$id.nc"}})
    db.StoredFiles.update({_id: '$id'}, {\$set: {'versions.original.meta.pipePath': "files/$id.nc"}})
EOF
    echo "Displaying mongoUpdate"
    cat mongoUpdate
    mongo --host 172.17.0.3 -p 27017 < mongoUpdate
    rm mongoUpdate
  else
    echo "Error: Unable to upload to object store: $id"
  fi
done
#cd /home/danny
